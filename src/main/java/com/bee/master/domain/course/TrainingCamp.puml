@startuml

package "TrainingCamp" {

    class TrainingCamp <<Entity>> <<Aggregate Root>> {
        - TrainingCampId id
        - String trainingCampName
        - String clientName
        - LocalDateTime startDateTime
        - LocalDateTime endDateTime
        - TrainingCampStatus status
        - List<Teacher> teachers
        - List<Team> teams
        - LocalDateTime createDateTime
        - List<Task> taskPool
        + create()
        + delete()
        + deleteTask()
        + inviteTeacher()
    }

    class TrainingCampId <<Value Object>> {
        - Long id
    }

    enum TrainingCampStatus{
        + ACTIVE
        + DELETE
        + DELETE_FOR_EVER
    }

    class Task <<Value Object>> {
        - int taskNumber
        - String taskName
        - String description
        - boolean visibleToStudent
        - LocalDateTime startDateTime
        - LocalDateTime endDateTime
        - List<Tool> tools
        - List<Attachment> attachments
        + create()
    }

    class Tool <<Value Object>> {
    }

    class Attachment <<Value Object>> {
    }

    class Team <<Value Object>> {
        - String teamName
        - List<Student> teamMembers
    }

    TrainingCamp *--  TrainingCampId
    TrainingCamp ..> TrainingCampStatus
    TrainingCamp "1" *-- "0..many" Task
    TrainingCamp "1" *-- "0..many" Team
    Task "1" *-- "0..many" Tool
    Task "1" *-- "0..many" Attachment
}

package "User" {

    class UserId <<Value Object>> {
        - String userId
    }

    class Teacher <<Value Object>> {
        - UserId teachId
    }

    class Student <<Value Object>> {
        - UserId studentId
    }

    class TrainingCampTeacherRelation <<Value Object>> {
        - TrainingCamp trainingCamp
        - Teacher teacher
    }

    Teacher ..> UserId
    Student ..> UserId
    Teacher "0..many" --* "0..many"  TrainingCampTeacherRelation
    TrainingCamp "many" *-- "0..many" TrainingCampTeacherRelation
    Team "*" *-- "0..many" Student
}

package "Work" {

    class Work <<Entity>> <<Aggregate Root>> {
        - Task task
        - Team team
        - List<WorkCommitRecord> commitRecords
        - CommitStatus commitStatus
        - WorkReview workReview
        - ReviewStatus reviewStatus
        + review()
    }

    class WorkReview <<Value Object>> {
        - String comment
        - RatingType rating
    }

    enum ReviewStatus {
        + WAITING_REVIEW
        + REVIEWED
    }

    enum CommitStatus {
        + WAITING_COMMIT
        + COMMITTED
    }


    enum RatingType {
        + BEYOND_EXPECTATION
        + EXCELLENT
        + GOOD
        + SUGGEST_MODIFICATION
    }

    class WorkCommitRecord <<Value Object>> {
        - Student student
        - LocalDateTime commitDateTime
    }

    Task "1" *-- "0..many" Work
    Work ..> RatingType
    Work ..> ReviewStatus
    Work ..> CommitStatus
    Work "1" *-- "0..many" WorkCommitRecord
    Work "1" --* Team
    Work  --* WorkReview

}


@enduml