apiVersion: v1
kind: Service
metadata:
  name: $APP_NAME
spec:
  selector:
    app: $APP_NAME
    env: $ENV
  type: ClusterIP
  ports:
    - protocol: TCP
      name: rest
      port: 8096
      targetPort: 8096
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_NAME
spec:
  selector:
    matchLabels:
      app: $APP_NAME
      env: $ENV
  replicas: 1
  template:
    metadata:
      labels:
        app: $APP_NAME
        env: $ENV
    spec:
      containers:
        - name: $APP_NAME
          image: $IMAGE
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: $ENV
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8096
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /api/$2
  name: $APP_NAME
spec:
  rules:
    - host: $HOST
      http:
        paths:
          - backend:
              serviceName: $APP_NAME
              servicePort: 8096
            path: /api(/|$)(.*)
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spring-cloud-k8s
rules:
  - apiGroups: [""]
    resources: ["secrets", "services", "pods", "configmaps", "endpoints"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spring-cloud-k8s
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spring-cloud-k8s
subjects:
  - kind: ServiceAccount
    name: default
